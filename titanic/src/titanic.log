 python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 22:22:05) [MSC v.1916 64 bit (AMD64)]
  numpy 1.16.3
 pandas 0.24.2
sklearn 0.21.1
xgboost 0.90
================================================================================
Meet data:
     PassengerId  Survived  Pclass  ...      Fare Cabin  Embarked
29            30       0.0       3  ...    7.8958   NaN         S
548          549       0.0       3  ...   20.5250   NaN         S
88           980       NaN       3  ...    7.7500   NaN         Q
412          413       1.0       1  ...   90.0000   C78         Q
74           966       NaN       1  ...  211.5000  C130         C

[5 rows x 12 columns]

Types and counts:
       PassengerId Pclass    Name     Sex  ... Embarked      Age Survived   Cabin
dtypes       int64  int64  object  object  ...   object  float64  float64  object
values        1309   1309    1309    1309  ...     1307     1046      891     295
nans             0      0       0       0  ...        2      263      418    1014

[3 rows x 12 columns]


--------------------------------------------------------------------------------
Extract Title from Name:
               Mr  Miss  Mrs  Master  Rev  ...  Mme  Lady  Don  the Countess  nan
Title object  757   260  197      61    8  ...    1     1    1             1    0

[1 rows x 19 columns] 

Encode categorical 'Title':
               2    1    3   0  nan
Title int32  783  264  201  61    0


--------------------------------------------------------------------------------
Encode categorical 'Sex':
             1    0  nan
Sex int32  843  466    0


--------------------------------------------------------------------------------
Family = SibSp + Parch + 1
                1    2    3   4   6   5   7  11  8  nan
Family int64  790  235  159  43  25  22  16  11  8    0


--------------------------------------------------------------------------------
Encode categorical 'Ticket':
              778  104  775  847  824  459  ...  531  530  529  528  422  nan
Ticket int32   11    8    8    7    7    7  ...    1    1    1    1    1    0

[1 rows x 930 columns]


--------------------------------------------------------------------------------
Infer  Fare
score 0.7854823838274335
best params {'learning_rate': 0.4, 'max_depth': 2, 'n_estimators': 160}
Feature importance:
  feature  importance
0  Pclass    0.797082
1  Family    0.118058
2  Ticket    0.084860
Score 0.8704


--------------------------------------------------------------------------------
Encode categorical 'Embarked':
                  2.0  0.0  1.0  nan
Embarked float64  914  270  123    2
Infer categorical Embarked
score 0.9416267942583733
params {'learning_rate': 0.4, 'max_depth': 5, 'n_estimators': 400}
                  2    0    1  nan
Embarked int32  916  270  123    0


--------------------------------------------------------------------------------
Infer  Age
score 0.18093542975020077
best params {'learning_rate': 0.04, 'max_depth': 2, 'n_estimators': 100}
Feature importance:
    feature  importance
0    Pclass    0.564080
1    Family    0.183489
3      Fare    0.105715
4  Embarked    0.073866
2    Ticket    0.072850
Score 0.2606


--------------------------------------------------------------------------------
Infer categorical Survived
score 0.7120786516853933
params {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 70}
                  0    1  nan
Survived int32  829  480    0
